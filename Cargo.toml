[package]
name = "civicjournal-time"
version = "0.1.0"
edition = "2021"
description = "A hierarchical time-series journal system using merkle-chains and pages for efficient historical state management"
license = "AGPL-3.0-only"

# Commercial licensing available - contact licensing@cogs.llc
# This software is dual-licensed under AGPL-3.0-only or a commercial license.

# Documentation settings
[package.metadata.docs.rs]
# Enable all features for documentation
all-features = true


[dependencies]
async-trait = "0.1"
# Core dependencies
thiserror = "1.0"
log = "0.4"
anyhow = "1.0"
url = "2.5.0"  # For URL parsing in metrics endpoint validation

# Serialization
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
toml = { version = "0.7", features = ["preserve_order"] }
libc = "0.2"

# Time handling
chrono = { version = "0.4", features = ["serde", "clock", "std"] }
chrono-tz = { version = "0.8", optional = true }

# Hashing and crypto
sha2 = "0.10"
hex = "0.4"
ring = { version = "0.17", optional = true }  # For cryptographic operations

# Async runtime
tokio = { version = "1", features = ["rt-multi-thread", "macros", "fs", "io-util", "sync", "time", "test-util"], optional = true }
futures = { version = "0.3", optional = true }

# Configuration and environment
config = { version = "0.13", default-features = false, features = ["toml"] }
env_logger = { version = "0.10", optional = true }
strum = { version = "0.25", features = ["derive"] }
strum_macros = "0.25"
directories = "6.0.0"  # For finding config files in standard locations

# Compression
zstd = { version = "0.12", optional = true }
lz4_flex = { version = "0.11", optional = true } # For LZ4 compression
snap = { version = "1.1", optional = true }  # For Snappy compression

# Concurrency
parking_lot = { version = "0.12", optional = true }  # More efficient synchronization primitives
lazy_static = "1.4"  # For static lazy initialization
dashmap = { version = "5.5.3", optional = true } # For MemoryStorage
zip = "0.6" # For creating zip archives (backup)
walkdir = "2" # For directory traversal
uuid = { version = "1", features = ["v4", "serde"] } # For generating unique IDs
tokio-postgres = { version = "0.7", optional = true, features = ["with-serde_json-1"] }
clap = { version = "4.4", features = ["derive"], optional = true }
rand = { version = "0.8", optional = true }
fake = { version = "2.7", features = ["derive", "chrono"], optional = true }
pg-embed = { version = "0.7.1", optional = true, default-features = false, features = ["rt_tokio_migrate"] }
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4"

[dev-dependencies]
lazy_static = "1.4.0"
# Enable arbitrary_precision for serde_json in tests
serde_json = { version = "1.0", features = ["arbitrary_precision"] }
# Testing
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
serial_test = "2.0"
tempfile = "3.3"
assert_matches = "1.5.0"

[features]
async_api = ["async"]
default = ["file-storage", "memory-storage", "zstd-compression", "lz4-compression", "snappy-compression", "logging", "async"]

# Storage backends
file-storage = ["tokio/fs"]
memory-storage = ["dep:dashmap"]

# Compression
zstd-compression = ["dep:zstd"]
lz4-compression = ["dep:lz4_flex"]
snappy-compression = ["dep:snap"]
no-compression = []

# Timezones
timezones = ["chrono-tz"]

# Async runtime
async = ["tokio", "futures"]

# Logging
logging = ["env_logger"]

# Crypto (for checksums and signatures)
crypto = ["ring"]

# Concurrency
concurrent = ["parking_lot"]

# Demo mode utilities and PostgreSQL driver
demo = ["async", "async_api", "logging", "dep:tokio-postgres", "dep:clap", "dep:fake", "dep:rand", "dep:pg-embed"]

[[bin]]
name = "cj-demo"
path = "src/bin/cj-demo.rs"
required-features = ["demo"]

[[bench]]
name = "critical_paths"
harness = false
